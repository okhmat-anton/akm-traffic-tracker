version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: tracker_postgres
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  src:
    build:
      context: ./src
    container_name: tracker_src
    restart: always
    expose:
      - "8000"
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_NAME=db
      - DB_USER=user
      - DB_PASSWORD=password
    volumes:
      - ./src:/app
    command: [
      "uvicorn",
      "app:app",
      "--host", "0.0.0.0",
      "--port", "8000",
      "--reload"
    ]

  backend:
    build:
      context: ./backend
    container_name: tracker_backend
    restart: always
    expose:
      - "8501"
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_NAME=db
      - DB_USER=user
      - DB_PASSWORD=password
    volumes:
      - ./backend:/app
    command: [
      "streamlit",
      "run",
      "app.py",
      "--server.port=8501",
      "--server.address=0.0.0.0",
      "--server.baseUrlPath=backend",
      "--server.enableCORS=false",
      "--server.enableXsrfProtection=false"
    ]

  nginx:
    build:
      context: ./nginx
    container_name: tracker_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - ./certbot-etc:/etc/letsencrypt
      - ./certbot-var:/var/www/certbot
    depends_on:
      - src
      - backend

volumes:
  postgres_data:
